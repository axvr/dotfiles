" ~/.vim/vimrc

filetype plugin indent on
if !exists('g:syntax_on')
    syntax enable
endif

" Essentials.  (TODO: review these.)
set startofline hidden autoread display=truncate
set backspace=indent,eol,start nrformats=bin,hex,unsigned
set showmatch showcmd ruler history=10000 shortmess=ltToOCF
set wildmenu wildignore+=*/.git/*,*/node_modules/*,tags,.DS_Store,*/.cpcache/*
set mouse=a belloff=all scrolloff=0 sidescroll=1 nofoldenable
set hlsearch incsearch ttimeout ttimeoutlen=50
set formatoptions+=jpl1n cpoptions+=J joinspaces
set grepformat^=%f:%l:%c:%m   " Match column numbers in 'grepformat'
set expandtab tabstop=8 softtabstop=4 shiftwidth=4
set shiftround autoindent nosmarttab
set wrap showbreak=â†³\  linebreak breakindent
set path=.,,** clipboard=unnamed
set spelllang=en_gb dictionary=/usr/dict/words,/usr/share/dict/words
set sessionoptions=buffers,curdir,tabpages viewoptions=folds,cursor,curdir
if has('nvim') | set winborder=single | endif

" Backup, swap and undo.  (TODO: unify these between editors?)
if has('nvim')
    set backupdir-=.
else
    let &backupdir = expand($HOME.'/.vim/state/backup')
    let &directory = expand($HOME.'/.vim/state/swap')
    let &undodir   = expand($HOME.'/.vim/state/undo')
endif
set backup undofile
for s:dir in [&backupdir, &directory, &undodir]
    if !isdirectory(s:dir) | call mkdir(s:dir, 'p') | endif
endfor
unlet s:dir

" :help i_CTRL-U-default
inoremap <C-U> <C-G>u<C-U>

" "<Leader>" and "<LocalLeader>" prefixes.
let g:mapleader = " "
let g:maplocalleader = "\\"

" Theming.
if &term =~# '256color$' || has('gui')
    set termguicolors
    colorscheme raider
    let &colorcolumn='+'.join(range(1,256),',+')
endif
if &term =~# '^\(screen\|tmux\)'
    " :help xterm-true-color
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
endif

" Enable blinking cursor.
set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
            \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
            \,sm:block-blinkwait175-blinkoff150-blinkon175

" Clean up Neovim PopUp menu.
if has('nvim') && exists(':menu')
    aunmenu PopUp.-2-
    aunmenu PopUp.How-to\ disable\ mouse
endif

augroup filetype_config
    autocmd!
    autocmd FileType c,cpp,go,gitconfig,fstab setl noet sts=8 sw=8
    autocmd FileType lisp,clojure,scheme,json,ruby,markdown setl et sts=2 sw=2
    autocmd FileType html,css setl noet sts=2 sw=2 ts=2
    autocmd FileType perl,sh,python,javascript setl tw=79
    autocmd FileType lisp,clojure,scheme setl commentstring=;;%s cpo-=J
    autocmd FileType robots,crontab,spec,desktop setl commentstring=#%s
    autocmd FileType c,cpp setl path+=/usr/include
    autocmd FileType tex compiler latexmk
    autocmd FileType gitcommit setl spell
    autocmd FileType git,gitcommit,diff setl foldmethod=syntax foldlevel=100
    autocmd FileType sh,bash setl keywordprg=:Man | compiler shellcheck
augroup END

" =============================================================
" Description:  Main Vim configuration file.
" File:         ~/.vim/vimrc
" =============================================================

filetype plugin indent on
if !exists('g:syntax_on')
    syntax enable
endif

" Essentials
set hidden
set autoread
set mouse=a
set backspace=indent,eol,start
set encoding=utf-8
set spelllang=en_gb
set formatoptions+=jpl1n
set cpoptions+=J
set nrformats-=octal
set modeline

" Interface
set showcmd
set ruler
set belloff=all
set showmatch
set scrolloff=0
set nofoldenable

" Search
set hlsearch
set incsearch

" Backup, swap & undo
let &backupdir = expand($HOME.'/.vim/backup')
set backup
let &directory = expand($HOME.'/.vim/swap')
let &undodir = expand($HOME.'/.vim/undo')
set undofile
for s:dir in [&backupdir, &directory, &undodir]
    if !isdirectory(s:dir)
        call mkdir(s:dir, 'p')
    endif
endfor
unlet s:dir

" Set "<Leader>" and "<LocalLeader>" prefixes
let mapleader = " "
let maplocalleader = "\\"

" Completion
set omnifunc=syntaxcomplete#Complete
set wildmenu
set wildignore+=*/.git/*,*/node_modules/*,tags
set path=.,,**
set dictionary=/usr/dict/words,/usr/share/dict/words

" Indentation
set tabstop=8
set softtabstop=4
set shiftwidth=4
set expandtab
set shiftround
set autoindent

" Line wrap (soft wrap code, hard wrap comments, strings and text)
let &showbreak='+++ '
set wrap
set linebreak
set breakindent

" Packages
packadd matchit
if v:version >= 810
    packadd cfilter
endif
packadd commentary
packadd lion
packadd cool
let g:CoolTotalMatches = 1

packadd zepl
runtime zepl/contrib/load_files.vim

let g:netrw_banner = 0
let g:c_syntax_for_h = 1
let g:c_comment_strings = 1
let g:org_clean_folds = 1

" Wiki
let g:waikiki_roots = ['~/Wiki/']
let g:waikiki_default_maps = 1
packadd waikiki
augroup Waikiki
    autocmd!
    autocmd User setup nmap <buffer> <2-LeftMouse> <Plug>(waikikiFollowLink)
augroup END

if $TERM =~# '^screen'
    set ttymouse=xterm2
endif

" Theming
let &colorcolumn='+'.join(range(1,256),',+')
colorscheme photon

augroup style
    autocmd!
    autocmd BufEnter,WinEnter * setlocal cursorline
    autocmd BufLeave,WinLeave * setlocal nocursorline
augroup END

com! -nargs=+ -complete=file GitGrep let s:gp=&gp|set gp=git\ grep\ -n|gr <args>|let &gp=s:gp|unl s:gp
com! -nargs=* -complete=file Todos let s:gp=&gp|set gp=todos|gr <args>|let &gp=s:gp|unl s:gp
com! -nargs=0 -bar Helptags for p in glob('~/.vim/pack/*/*/*/doc',1,1)|exe 'helpt '.p|endfo
com! -nargs=0 -bar Scratch enew|setl bh=hide bt=nofile noswf
com! -nargs=? -range GitBlame ec join(systemlist("git -C ".shellescape(expand('%:p:h')).
            \ " blame -L <line1>,<line2> <args> -- ".expand('%:t')),"\n")
com! -nargs=0 -bar Tasks tabe DONE|sp DOING|sp TODO

augroup filetypes
    autocmd!

    autocmd FileType c,cpp setlocal path+=/usr/include
    autocmd FileType c,make,go,gitconfig,fstab setlocal noet sts=8 sw=8 ts=8
    autocmd FileType lisp,json,ruby,scheme,clojure setlocal et sts=2 sw=2 ts=8
    autocmd FileType html,css setlocal noet sts=2 sw=2 ts=2
    autocmd FileType python setlocal et sts=4 sw=4 ts=4
    autocmd FileType perl,sh,python,haskell,javascript setlocal tw=79
    autocmd FileType gitcommit setlocal spell

    autocmd FileType tex compiler latexmk
    autocmd FileType perl compiler perl
    autocmd FileType sh compiler shellcheck

    autocmd FileType lisp,clojure,scheme setlocal commentstring=;;%s
    autocmd FileType fstab,crontab setlocal commentstring=#%s

    autocmd BufRead,BufNewFile *.vue setfiletype html
    autocmd BufRead,BufNewFile *.ts setlocal filetype=javascript

    " Redo <https://cr.yp.to/redo.html> <http://news.dieweltistgarnichtso.net/bin/redo-sh.html>
    autocmd BufRead,BufNewFile *.do setlocal filetype=sh

    autocmd FileType clojure let b:repl_config = { 'cmd': 'clj', 'load_file': '(load-file "%s")' }
augroup END
